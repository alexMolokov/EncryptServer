<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : auth.proto
 */


namespace EncryptServer\Protocol\Auth\features_request;

/**
 * Protobuf enum : encryptserver.features_request.ClientFeature
 */
class ClientFeature extends \Protobuf\Enum
{

    /**
     * ContactUpdatedIsSupported = 0
     */
    const ContactUpdatedIsSupported_VALUE = 0;

    /**
     * ConferenceAuthRecordIsSupported = 1
     */
    const ConferenceAuthRecordIsSupported_VALUE = 1;

    /**
     * BulkDeletionFilesystem = 2
     */
    const BulkDeletionFilesystem_VALUE = 2;

    /**
     * @var \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    protected static $ContactUpdatedIsSupported = null;

    /**
     * @var \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    protected static $ConferenceAuthRecordIsSupported = null;

    /**
     * @var \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    protected static $BulkDeletionFilesystem = null;

    /**
     * @return \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    public static function ContactUpdatedIsSupported()
    {
        if (self::$ContactUpdatedIsSupported !== null) {
            return self::$ContactUpdatedIsSupported;
        }

        return self::$ContactUpdatedIsSupported = new self('ContactUpdatedIsSupported', self::ContactUpdatedIsSupported_VALUE);
    }

    /**
     * @return \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    public static function ConferenceAuthRecordIsSupported()
    {
        if (self::$ConferenceAuthRecordIsSupported !== null) {
            return self::$ConferenceAuthRecordIsSupported;
        }

        return self::$ConferenceAuthRecordIsSupported = new self('ConferenceAuthRecordIsSupported', self::ConferenceAuthRecordIsSupported_VALUE);
    }

    /**
     * @return \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    public static function BulkDeletionFilesystem()
    {
        if (self::$BulkDeletionFilesystem !== null) {
            return self::$BulkDeletionFilesystem;
        }

        return self::$BulkDeletionFilesystem = new self('BulkDeletionFilesystem', self::BulkDeletionFilesystem_VALUE);
    }

    /**
     * @param int $value
     * @return \EncryptServer\Protocol\Auth\features_request\ClientFeature
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::ContactUpdatedIsSupported();
            case 1: return self::ConferenceAuthRecordIsSupported();
            case 2: return self::BulkDeletionFilesystem();
            default: return null;
        }
    }


}

