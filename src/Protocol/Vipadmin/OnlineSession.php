<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : vipadmin.proto
 */


namespace EncryptServer\Protocol\Vipadmin;

/**
 * Protobuf message : EncryptServer.Protocol.Vipadmin.OnlineSession
 */
class OnlineSession extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * session_id optional string = 1
     *
     * @var string
     */
    protected $session_id = null;

    /**
     * version_ini optional int32 = 2
     *
     * @var int
     */
    protected $version_ini = null;

    /**
     * version_def optional int32 = 3
     *
     * @var int
     */
    protected $version_def = null;

    /**
     * business_account_id optional string = 4
     *
     * @var string
     */
    protected $business_account_id = null;

    /**
     * system optional string = 5
     *
     * @var string
     */
    protected $system = null;

    /**
     * system_version optional string = 6
     *
     * @var string
     */
    protected $system_version = null;

    /**
     * locale optional string = 7
     *
     * @var string
     */
    protected $locale = null;

    /**
     * fs_encrypted optional bool = 8
     *
     * @var bool
     */
    protected $fs_encrypted = null;

    /**
     * app_instance optional string = 9
     *
     * @var string
     */
    protected $app_instance = null;

    /**
     * process optional string = 10
     *
     * @var string
     */
    protected $process = null;

    /**
     * ip optional string = 11
     *
     * @var string
     */
    protected $ip = null;

    /**
     * login_time optional int32 = 12
     *
     * @var int
     */
    protected $login_time = null;

    /**
     * resource optional string = 13
     *
     * @var string
     */
    protected $resource = null;

    /**
     * data_channel optional bool = 14
     *
     * @var bool
     */
    protected $data_channel = null;

    /**
     * login optional string = 15
     *
     * @var string
     */
    protected $login = null;

    /**
     * domain optional string = 16
     *
     * @var string
     */
    protected $domain = null;

    /**
     * commands_per_second optional int32 = 17
     *
     * @var int
     */
    protected $commands_per_second = null;

    /**
     * is_dead optional bool = 18
     *
     * @var bool
     */
    protected $is_dead = null;

    /**
     * {@inheritdoc}
     */
    public function __construct($stream = null, \Protobuf\Configuration $configuration = null)
    {
        $this->fs_encrypted = false;

        parent::__construct($stream, $configuration);
    }

    /**
     * Check if 'session_id' has a value
     *
     * @return bool
     */
    public function hasSessionId()
    {
        return $this->session_id !== null;
    }

    /**
     * Get 'session_id' value
     *
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Set 'session_id' value
     *
     * @param string $value
     */
    public function setSessionId($value = null)
    {
        $this->session_id = $value;
    }

    /**
     * Check if 'version_ini' has a value
     *
     * @return bool
     */
    public function hasVersionIni()
    {
        return $this->version_ini !== null;
    }

    /**
     * Get 'version_ini' value
     *
     * @return int
     */
    public function getVersionIni()
    {
        return $this->version_ini;
    }

    /**
     * Set 'version_ini' value
     *
     * @param int $value
     */
    public function setVersionIni($value = null)
    {
        $this->version_ini = $value;
    }

    /**
     * Check if 'version_def' has a value
     *
     * @return bool
     */
    public function hasVersionDef()
    {
        return $this->version_def !== null;
    }

    /**
     * Get 'version_def' value
     *
     * @return int
     */
    public function getVersionDef()
    {
        return $this->version_def;
    }

    /**
     * Set 'version_def' value
     *
     * @param int $value
     */
    public function setVersionDef($value = null)
    {
        $this->version_def = $value;
    }

    /**
     * Check if 'business_account_id' has a value
     *
     * @return bool
     */
    public function hasBusinessAccountId()
    {
        return $this->business_account_id !== null;
    }

    /**
     * Get 'business_account_id' value
     *
     * @return string
     */
    public function getBusinessAccountId()
    {
        return $this->business_account_id;
    }

    /**
     * Set 'business_account_id' value
     *
     * @param string $value
     */
    public function setBusinessAccountId($value = null)
    {
        $this->business_account_id = $value;
    }

    /**
     * Check if 'system' has a value
     *
     * @return bool
     */
    public function hasSystem()
    {
        return $this->system !== null;
    }

    /**
     * Get 'system' value
     *
     * @return string
     */
    public function getSystem()
    {
        return $this->system;
    }

    /**
     * Set 'system' value
     *
     * @param string $value
     */
    public function setSystem($value = null)
    {
        $this->system = $value;
    }

    /**
     * Check if 'system_version' has a value
     *
     * @return bool
     */
    public function hasSystemVersion()
    {
        return $this->system_version !== null;
    }

    /**
     * Get 'system_version' value
     *
     * @return string
     */
    public function getSystemVersion()
    {
        return $this->system_version;
    }

    /**
     * Set 'system_version' value
     *
     * @param string $value
     */
    public function setSystemVersion($value = null)
    {
        $this->system_version = $value;
    }

    /**
     * Check if 'locale' has a value
     *
     * @return bool
     */
    public function hasLocale()
    {
        return $this->locale !== null;
    }

    /**
     * Get 'locale' value
     *
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * Set 'locale' value
     *
     * @param string $value
     */
    public function setLocale($value = null)
    {
        $this->locale = $value;
    }

    /**
     * Check if 'fs_encrypted' has a value
     *
     * @return bool
     */
    public function hasFsEncrypted()
    {
        return $this->fs_encrypted !== null;
    }

    /**
     * Get 'fs_encrypted' value
     *
     * @return bool
     */
    public function getFsEncrypted()
    {
        return $this->fs_encrypted;
    }

    /**
     * Set 'fs_encrypted' value
     *
     * @param bool $value
     */
    public function setFsEncrypted($value = null)
    {
        $this->fs_encrypted = $value;
    }

    /**
     * Check if 'app_instance' has a value
     *
     * @return bool
     */
    public function hasAppInstance()
    {
        return $this->app_instance !== null;
    }

    /**
     * Get 'app_instance' value
     *
     * @return string
     */
    public function getAppInstance()
    {
        return $this->app_instance;
    }

    /**
     * Set 'app_instance' value
     *
     * @param string $value
     */
    public function setAppInstance($value = null)
    {
        $this->app_instance = $value;
    }

    /**
     * Check if 'process' has a value
     *
     * @return bool
     */
    public function hasProcess()
    {
        return $this->process !== null;
    }

    /**
     * Get 'process' value
     *
     * @return string
     */
    public function getProcess()
    {
        return $this->process;
    }

    /**
     * Set 'process' value
     *
     * @param string $value
     */
    public function setProcess($value = null)
    {
        $this->process = $value;
    }

    /**
     * Check if 'ip' has a value
     *
     * @return bool
     */
    public function hasIp()
    {
        return $this->ip !== null;
    }

    /**
     * Get 'ip' value
     *
     * @return string
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * Set 'ip' value
     *
     * @param string $value
     */
    public function setIp($value = null)
    {
        $this->ip = $value;
    }

    /**
     * Check if 'login_time' has a value
     *
     * @return bool
     */
    public function hasLoginTime()
    {
        return $this->login_time !== null;
    }

    /**
     * Get 'login_time' value
     *
     * @return int
     */
    public function getLoginTime()
    {
        return $this->login_time;
    }

    /**
     * Set 'login_time' value
     *
     * @param int $value
     */
    public function setLoginTime($value = null)
    {
        $this->login_time = $value;
    }

    /**
     * Check if 'resource' has a value
     *
     * @return bool
     */
    public function hasResource()
    {
        return $this->resource !== null;
    }

    /**
     * Get 'resource' value
     *
     * @return string
     */
    public function getResource()
    {
        return $this->resource;
    }

    /**
     * Set 'resource' value
     *
     * @param string $value
     */
    public function setResource($value = null)
    {
        $this->resource = $value;
    }

    /**
     * Check if 'data_channel' has a value
     *
     * @return bool
     */
    public function hasDataChannel()
    {
        return $this->data_channel !== null;
    }

    /**
     * Get 'data_channel' value
     *
     * @return bool
     */
    public function getDataChannel()
    {
        return $this->data_channel;
    }

    /**
     * Set 'data_channel' value
     *
     * @param bool $value
     */
    public function setDataChannel($value = null)
    {
        $this->data_channel = $value;
    }

    /**
     * Check if 'login' has a value
     *
     * @return bool
     */
    public function hasLogin()
    {
        return $this->login !== null;
    }

    /**
     * Get 'login' value
     *
     * @return string
     */
    public function getLogin()
    {
        return $this->login;
    }

    /**
     * Set 'login' value
     *
     * @param string $value
     */
    public function setLogin($value = null)
    {
        $this->login = $value;
    }

    /**
     * Check if 'domain' has a value
     *
     * @return bool
     */
    public function hasDomain()
    {
        return $this->domain !== null;
    }

    /**
     * Get 'domain' value
     *
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * Set 'domain' value
     *
     * @param string $value
     */
    public function setDomain($value = null)
    {
        $this->domain = $value;
    }

    /**
     * Check if 'commands_per_second' has a value
     *
     * @return bool
     */
    public function hasCommandsPerSecond()
    {
        return $this->commands_per_second !== null;
    }

    /**
     * Get 'commands_per_second' value
     *
     * @return int
     */
    public function getCommandsPerSecond()
    {
        return $this->commands_per_second;
    }

    /**
     * Set 'commands_per_second' value
     *
     * @param int $value
     */
    public function setCommandsPerSecond($value = null)
    {
        $this->commands_per_second = $value;
    }

    /**
     * Check if 'is_dead' has a value
     *
     * @return bool
     */
    public function hasIsDead()
    {
        return $this->is_dead !== null;
    }

    /**
     * Get 'is_dead' value
     *
     * @return bool
     */
    public function getIsDead()
    {
        return $this->is_dead;
    }

    /**
     * Set 'is_dead' value
     *
     * @param bool $value
     */
    public function setIsDead($value = null)
    {
        $this->is_dead = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'session_id' => null,
            'version_ini' => null,
            'version_def' => null,
            'business_account_id' => null,
            'system' => null,
            'system_version' => null,
            'locale' => null,
            'fs_encrypted' => false,
            'app_instance' => null,
            'process' => null,
            'ip' => null,
            'login_time' => null,
            'resource' => null,
            'data_channel' => null,
            'login' => null,
            'domain' => null,
            'commands_per_second' => null,
            'is_dead' => null
        ], $values);

        $message->setSessionId($values['session_id']);
        $message->setVersionIni($values['version_ini']);
        $message->setVersionDef($values['version_def']);
        $message->setBusinessAccountId($values['business_account_id']);
        $message->setSystem($values['system']);
        $message->setSystemVersion($values['system_version']);
        $message->setLocale($values['locale']);
        $message->setFsEncrypted($values['fs_encrypted']);
        $message->setAppInstance($values['app_instance']);
        $message->setProcess($values['process']);
        $message->setIp($values['ip']);
        $message->setLoginTime($values['login_time']);
        $message->setResource($values['resource']);
        $message->setDataChannel($values['data_channel']);
        $message->setLogin($values['login']);
        $message->setDomain($values['domain']);
        $message->setCommandsPerSecond($values['commands_per_second']);
        $message->setIsDead($values['is_dead']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'OnlineSession',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'session_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'version_ini',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'version_def',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'business_account_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'system',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'system_version',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'locale',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'fs_encrypted',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => false
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'app_instance',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'process',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'ip',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'login_time',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'resource',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'data_channel',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'login',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'domain',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'commands_per_second',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'is_dead',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->session_id !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->session_id);
        }

        if ($this->version_ini !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->version_ini);
        }

        if ($this->version_def !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->version_def);
        }

        if ($this->business_account_id !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeString($stream, $this->business_account_id);
        }

        if ($this->system !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeString($stream, $this->system);
        }

        if ($this->system_version !== null) {
            $writer->writeVarint($stream, 50);
            $writer->writeString($stream, $this->system_version);
        }

        if ($this->locale !== null) {
            $writer->writeVarint($stream, 58);
            $writer->writeString($stream, $this->locale);
        }

        if ($this->fs_encrypted !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeBool($stream, $this->fs_encrypted);
        }

        if ($this->app_instance !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeString($stream, $this->app_instance);
        }

        if ($this->process !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeString($stream, $this->process);
        }

        if ($this->ip !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeString($stream, $this->ip);
        }

        if ($this->login_time !== null) {
            $writer->writeVarint($stream, 96);
            $writer->writeVarint($stream, $this->login_time);
        }

        if ($this->resource !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeString($stream, $this->resource);
        }

        if ($this->data_channel !== null) {
            $writer->writeVarint($stream, 112);
            $writer->writeBool($stream, $this->data_channel);
        }

        if ($this->login !== null) {
            $writer->writeVarint($stream, 122);
            $writer->writeString($stream, $this->login);
        }

        if ($this->domain !== null) {
            $writer->writeVarint($stream, 130);
            $writer->writeString($stream, $this->domain);
        }

        if ($this->commands_per_second !== null) {
            $writer->writeVarint($stream, 136);
            $writer->writeVarint($stream, $this->commands_per_second);
        }

        if ($this->is_dead !== null) {
            $writer->writeVarint($stream, 144);
            $writer->writeBool($stream, $this->is_dead);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->session_id = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->version_ini = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->version_def = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->business_account_id = $reader->readString($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->system = $reader->readString($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->system_version = $reader->readString($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->locale = $reader->readString($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->fs_encrypted = $reader->readBool($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->app_instance = $reader->readString($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->process = $reader->readString($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->ip = $reader->readString($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->login_time = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->resource = $reader->readString($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->data_channel = $reader->readBool($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->login = $reader->readString($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->domain = $reader->readString($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->commands_per_second = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_dead = $reader->readBool($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->session_id !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->session_id);
        }

        if ($this->version_ini !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->version_ini);
        }

        if ($this->version_def !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->version_def);
        }

        if ($this->business_account_id !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->business_account_id);
        }

        if ($this->system !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->system);
        }

        if ($this->system_version !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->system_version);
        }

        if ($this->locale !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->locale);
        }

        if ($this->fs_encrypted !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->app_instance !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->app_instance);
        }

        if ($this->process !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->process);
        }

        if ($this->ip !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->ip);
        }

        if ($this->login_time !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->login_time);
        }

        if ($this->resource !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->resource);
        }

        if ($this->data_channel !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->login !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->login);
        }

        if ($this->domain !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->domain);
        }

        if ($this->commands_per_second !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->commands_per_second);
        }

        if ($this->is_dead !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->session_id = null;
        $this->version_ini = null;
        $this->version_def = null;
        $this->business_account_id = null;
        $this->system = null;
        $this->system_version = null;
        $this->locale = null;
        $this->fs_encrypted = false;
        $this->app_instance = null;
        $this->process = null;
        $this->ip = null;
        $this->login_time = null;
        $this->resource = null;
        $this->data_channel = null;
        $this->login = null;
        $this->domain = null;
        $this->commands_per_second = null;
        $this->is_dead = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \EncryptServer\Protocol\Vipadmin\OnlineSession) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->session_id = ($message->session_id !== null) ? $message->session_id : $this->session_id;
        $this->version_ini = ($message->version_ini !== null) ? $message->version_ini : $this->version_ini;
        $this->version_def = ($message->version_def !== null) ? $message->version_def : $this->version_def;
        $this->business_account_id = ($message->business_account_id !== null) ? $message->business_account_id : $this->business_account_id;
        $this->system = ($message->system !== null) ? $message->system : $this->system;
        $this->system_version = ($message->system_version !== null) ? $message->system_version : $this->system_version;
        $this->locale = ($message->locale !== null) ? $message->locale : $this->locale;
        $this->fs_encrypted = ($message->fs_encrypted !== null) ? $message->fs_encrypted : $this->fs_encrypted;
        $this->app_instance = ($message->app_instance !== null) ? $message->app_instance : $this->app_instance;
        $this->process = ($message->process !== null) ? $message->process : $this->process;
        $this->ip = ($message->ip !== null) ? $message->ip : $this->ip;
        $this->login_time = ($message->login_time !== null) ? $message->login_time : $this->login_time;
        $this->resource = ($message->resource !== null) ? $message->resource : $this->resource;
        $this->data_channel = ($message->data_channel !== null) ? $message->data_channel : $this->data_channel;
        $this->login = ($message->login !== null) ? $message->login : $this->login;
        $this->domain = ($message->domain !== null) ? $message->domain : $this->domain;
        $this->commands_per_second = ($message->commands_per_second !== null) ? $message->commands_per_second : $this->commands_per_second;
        $this->is_dead = ($message->is_dead !== null) ? $message->is_dead : $this->is_dead;
    }


}

